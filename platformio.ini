;  PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:featheresp32]
platform = espressif32
board = featheresp32
framework = arduino
lib_compat_mode = strict
monitor_speed = 115200
board_build.partitions = min_spiffs.csv

# Build flags for optimized OTA performance
build_flags = 
    -DCORE_DEBUG_LEVEL=3
    -DOTA_BUFFER_SIZE=1024
    -std=c++11

# Dependencies for modular OTA system
lib_deps = 
    ayushsharma82/ElegantOTA@^3.1.7  ; For backward compatibility reference

# Example configurations for different use cases
[env:modular_complete]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
build_src_filter = +<../examples/ModularComplete/*>
lib_compat_mode = strict
board_build.partitions = min_spiffs.csv
build_flags = 
    -DCORE_DEBUG_LEVEL=3
    -std=c++11

[env:backward_compatible]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
build_src_filter = +<../examples/BackwardCompatibility/*>
lib_compat_mode = strict
board_build.partitions = min_spiffs.csv
build_flags = 
    -std=c++11

[env:individual_modules]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
build_src_filter = +<../examples/IndividualModules/*>
lib_compat_mode = strict
board_build.partitions = min_spiffs.csv
build_flags = 
    -std=c++11

[env:async_webserver]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
build_src_filter = +<../examples/AsyncWebServer/*>
lib_compat_mode = strict
board_build.partitions = min_spiffs.csv
build_flags = 
    -std=c++11
lib_deps = 
    ottowinter/ESPAsyncWebServer-esphome@^3.2.2
    ottowinter/AsyncTCP-esphome@^2.0.1

[platformio]
description = Modular ESP32 OTA system with decoupled components, persistence across updates, and backward compatibility. Enables reliable, repeatable OTA updates with automatic network management and customizable web interfaces.
default_envs = featheresp32
